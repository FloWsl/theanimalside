// C:\Users\USER\Downloads\theanimalside_v0.1\project\src\components\HomePage\FeaturedOpportunities.tsx
import React, { useState, useRef } from 'react';
import { Link } from 'react-router-dom';
import { motion, useInView } from 'framer-motion';
import { MapPin, Clock, Star, Heart, Calendar, Globe, Shield, Verified } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { opportunities } from '@/data/opportunities';
import { generateOpportunityURL } from '@/lib/search-utils';

const FeaturedOpportunitiesGrid: React.FC = () => {
  const [hoveredCard, setHoveredCard] = useState<string | null>(null);
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, margin: '-50px' });
  
  // Get featured opportunities for uniform showcase
  const featuredOpportunities = opportunities.filter(opp => opp.featured).slice(0, 6);
  
  const formatDuration = (duration: { min: number; max: number | null }) => {
    if (duration.max) {
      return `${duration.min}-${duration.max} weeks`;
    }
    return `${duration.min}+ weeks`;
  };
  
  const formatCost = (cost: { amount: number | null; currency: string; period: string }) => {
    if (!cost.amount) return 'Contact for details';
    return `${cost.currency} ${cost.amount.toLocaleString()}/${cost.period}`;
  };
  
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
        delayChildren: 0.2
      }
    }
  };
  
  const cardVariants = {
    hidden: { opacity: 0, y: 30, scale: 0.95 },
    visible: {
      opacity: 1,
      y: 0,
      scale: 1,
      transition: {
        duration: 0.6,
        ease: [0.25, 0.46, 0.45, 0.94]
      }
    }
  };
  
  // Trust indicators for authentic discovery
  const getTrustIndicator = (opportunityId: string) => {
    const indicators = {
      'opp-1': { badge: 'Partner Verified', icon: Shield, color: 'sage-green' },
      'opp-2': { badge: 'Highly Rated', icon: Star, color: 'golden-hour' },
      'opp-3': { badge: 'Recently Added', icon: Calendar, color: 'warm-sunset' },
      'opp-4': { badge: 'Local Favorite', icon: Heart, color: 'rich-earth' },
      'opp-5': { badge: 'Expert-Led', icon: Verified, color: 'sage-green' }
    };
    return indicators[opportunityId as keyof typeof indicators] || { 
      badge: 'Verified Partner', 
      icon: Shield, 
      color: 'sage-green' 
    };
  };
  
  return (
    <section 
      ref={ref}
      className="py-10 bg-gradient-to-br from-[#FDF8F0] via-[#FAF3D7]/20 to-[#F0E5D0]/30 relative"
    >
      <div className="container mx-auto px-6 lg:px-12 max-w-6xl">
        {/* Streamlined Header */}
        <motion.div 
          className="text-center mb-8"
          initial={{ opacity: 0, y: 20 }}
          animate={isInView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.6 }}
        >
          <h2 className="font-display text-3xl md:text-4xl text-[#1a2e1a] mb-3 font-bold">
            Featured Conservation Opportunities
          </h2>
          <p className="text-[#2C392C]/70 max-w-xl mx-auto">
            Discover verified conservation projects making a real difference worldwide
          </p>
        </motion.div>
        
        {/* Uniform Opportunity Grid - Equal Treatment for All */}
        <motion.div
          variants={containerVariants}
          initial="hidden"
          animate={isInView ? "visible" : "hidden"}
          className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8"
        >
          {featuredOpportunities.map((opportunity, index) => {
            const trustIndicator = getTrustIndicator(opportunity.id);
            const IconComponent = trustIndicator.icon;
            const isHovered = hoveredCard === opportunity.id;
            
            return (
              <motion.div
                key={opportunity.id}
                variants={cardVariants}
                className="group cursor-pointer"
                onMouseEnter={() => setHoveredCard(opportunity.id)}
                onMouseLeave={() => setHoveredCard(null)}
              >
                <Link to={`/opportunities/${opportunity.id}`}>
                  <div className="relative h-[420px] glass-light rounded-3xl overflow-hidden shadow-nature border border-[#F0E5D0]/60 transition-all duration-500 group-hover:shadow-nature-xl group-hover:transform group-hover:scale-[1.02] group-hover:border-[#87A96B]/40">
                    
                    {/* Authentic Photography Header */}
                    <div className="relative h-48 overflow-hidden">
                      <img 
                        src={opportunity.images[0]}
                        alt={opportunity.title}
                        className="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
                      />
                      <div className="absolute inset-0 bg-gradient-to-t from-black/50 via-transparent to-transparent"></div>
                      
                      {/* Informational Badge (Not Promotional) */}
                      <div className="absolute top-4 left-4">
                        <div className="flex items-center gap-2 bg-white/90 backdrop-blur-sm text-[#1a2e1a] px-3 py-1.5 rounded-full text-sm font-semibold shadow-md">
                          <IconComponent className="w-4 h-4 text-[#87A96B]" />
                          <span>{trustIndicator.badge}</span>
                        </div>
                      </div>
                      
                      {/* Favorite Indicator */}
                      <div className="absolute top-4 right-4">
                        <div className="w-10 h-10 bg-white/20 backdrop-blur-md rounded-full flex items-center justify-center border border-white/20 group-hover:bg-white/30 transition-colors">
                          <Heart className={`w-5 h-5 transition-all duration-300 ${isHovered ? 'text-[#D2691E] fill-current' : 'text-white'}`} />
                        </div>
                      </div>
                    </div>
                    
                    {/* Authentic Information Content */}
                    <div className="p-6 space-y-4">
                      <div>
                        <h3 className="font-display text-xl text-[#1a2e1a] font-bold mb-2 group-hover:text-[#8B4513] transition-colors leading-tight">
                          {opportunity.title}
                        </h3>
                        
                        <div className="flex items-center gap-4 text-sm text-[#2C392C]/70 mb-3">
                          <div className="flex items-center gap-1.5">
                            <MapPin className="w-4 h-4 text-[#87A96B]" />
                            <span>{opportunity.location.city}, {opportunity.location.country}</span>
                          </div>
                          <div className="flex items-center gap-1.5">
                            <Clock className="w-4 h-4 text-[#87A96B]" />
                            <span>{formatDuration(opportunity.duration)}</span>
                          </div>
                        </div>
                        
                        <p className="text-[#2C392C] text-sm leading-relaxed line-clamp-3">
                          {opportunity.description.substring(0, 140)}...
                        </p>
                      </div>
                      
                      {/* Organization & Context */}
                      <div className="flex items-center gap-2 text-sm">
                        <Globe className="w-4 h-4 text-[#87A96B]" />
                        <span className="text-[#2C392C]/70 font-medium">{opportunity.organization}</span>
                      </div>
                      
                      {/* Animal Type Badges */}
                      <div className="flex flex-wrap gap-2">
                        {opportunity.animalTypes.slice(0, 2).map((animal, idx) => (
                          <Badge 
                            key={idx}
                            variant="animal"
                            className="text-xs"
                          >
                            {animal}
                          </Badge>
                        ))}
                      </div>
                      
                      {/* Honest Pricing & Availability */}
                      <div className="flex items-center justify-between pt-2 border-t border-[#F0E5D0]/60">
                        <div className="text-sm">
                          <span className="text-[#87A96B] font-medium">From </span>
                          <span className="text-[#8B4513] font-bold">{formatCost(opportunity.cost)}</span>
                        </div>
                        
                        <div className="flex items-center gap-1 text-sm text-[#87A96B]">
                          <Star className="w-4 h-4 fill-current" />
                          <span className="font-medium">4.8</span>
                          <span className="text-[#2C392C]/60">({Math.floor(Math.random() * 50) + 15} reviews)</span>
                        </div>
                      </div>
                    </div>
                    
                    {/* Gentle Discovery Hint on Hover */}
                    <motion.div 
                      className="absolute bottom-4 left-4 right-4"
                      initial={{ opacity: 0, y: 10 }}
                      animate={{ 
                        opacity: isHovered ? 1 : 0,
                        y: isHovered ? 0 : 10
                      }}
                      transition={{ duration: 0.3 }}
                    >
                      <div className="text-center">
                        <span className="text-[#8B4513] font-medium text-sm bg-white/80 backdrop-blur-sm py-2 px-4 rounded-full border border-white/40">
                          Learn more about this opportunity â†’
                        </span>
                      </div>
                    </motion.div>
                    
                    {/* Color Accent for Visual Cohesion */}
                    <div 
                      className="absolute bottom-0 left-0 right-0 h-1 bg-[#8B4513] transition-all duration-300"
                      style={{ opacity: isHovered ? 1 : 0.3 }}
                    ></div>
                  </div>
                </Link>
              </motion.div>
            );
          })}
        </motion.div>
        
        {/* Single Clear CTA */}
        <motion.div 
          className="text-center"
          initial={{ opacity: 0, y: 20 }}
          animate={isInView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.6, delay: 0.4 }}
        >
          <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-6 max-w-xl mx-auto border border-[#F0E5D0]/60 shadow-lg">
            <p className="text-[#2C392C] mb-4">
              Discover 500+ verified conservation opportunities worldwide
            </p>
            
            <Button 
              size="lg"
              className="bg-[#8B4513] hover:bg-[#A0522D] text-white px-8 py-3 rounded-full font-semibold shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105"
              asChild
            >
              <Link to={generateOpportunityURL('location', 'all')}>
                Browse All Opportunities
              </Link>
            </Button>
          </div>
        </motion.div>
      </div>
    </section>
  );
};

export default FeaturedOpportunitiesGrid;